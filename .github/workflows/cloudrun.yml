name: Deploy API to Cloud Run

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  REGION: ${{ vars.GCP_REGION }}
  SERVICE_NAME: ${{ vars.CLOUD_RUN_SERVICE }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate required secrets/vars
        run: |
          missing=0
          [ -z "${{ secrets.GCP_WIF_PROVIDER }}" ] && echo "Missing secret: GCP_WIF_PROVIDER" && missing=1 || true
          [ -z "${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}" ] && echo "Missing secret: GCP_SERVICE_ACCOUNT_EMAIL" && missing=1 || true
          [ -z "${{ vars.GCP_PROJECT_ID }}" ] && echo "Missing variable: GCP_PROJECT_ID" && missing=1 || true
          [ -z "${{ vars.GCP_REGION }}" ] && echo "Missing variable: GCP_REGION" && missing=1 || true
          [ -z "${{ vars.CLOUD_RUN_SERVICE }}" ] && echo "Missing variable: CLOUD_RUN_SERVICE" && missing=1 || true
          [ "$missing" = "1" ] && exit 1 || true

      - name: Authenticate to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Ensure required services (owner-only; skip in CI)
        continue-on-error: true
        run: |
          echo "Skipping API enablement in CI. Enable once via Cloud Shell:"
          echo "gcloud services enable run.googleapis.com cloudbuild.googleapis.com artifactregistry.googleapis.com"

      - name: Configure Docker auth for Artifact Registry
        run: |
          : "${REGION:=us-central1}"
          gcloud auth configure-docker "${REGION}-docker.pkg.dev" --quiet | cat

      - name: Build and push image (Docker)
        run: |
          : "${REGION:=us-central1}"
          : "${SERVICE_NAME:=seek-api}"
          IMAGE="${REGION}-docker.pkg.dev/${PROJECT_ID}/${SERVICE_NAME}/${SERVICE_NAME}:$GITHUB_SHA"
          echo "Building ${IMAGE}"
          docker build -t "${IMAGE}" .
          docker push "${IMAGE}"
          echo "IMAGE=${IMAGE}" >> $GITHUB_ENV

      - name: Verify image exists in Artifact Registry
        run: |
          gcloud artifacts docker images describe "${IMAGE}" | cat

      - name: List services before deploy (debug)
        run: |
          gcloud run services list --region "${REGION}" --format='table(LOCATION,NAME,URL)' | cat

      - name: Deploy to Cloud Run (Docker image)
        run: |
          : "${REGION:=us-central1}"
          : "${SERVICE_NAME:=seek-api}"
          gcloud run deploy "${SERVICE_NAME}" \
            --image "${IMAGE}" \
            --region "${REGION}" \
            --allow-unauthenticated \
            --port 8080 | cat

      - name: List services after deploy (debug)
        run: |
          gcloud run services list --region "${REGION}" --format='table(LOCATION,NAME,URL)' | cat

      - name: Fetch service URL
        id: url
        run: |
          URL=$(gcloud run services describe "${SERVICE_NAME}" --region "${REGION}" --format 'value(status.url)')
          echo "url=${URL}" >> $GITHUB_OUTPUT
          echo "Deployed: ${URL}"

      - name: Summary
        run: |
          echo "API deployed to: ${{ steps.url.outputs.url }}" >> $GITHUB_STEP_SUMMARY


